name: Development Build

on:
  push:
    branches: [ develop, dev, feature/*, hotfix/* ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-dev:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: React Native JS bundle
        run: |
          npx react-native bundle --platform android \
            --dev false \
            --entry-file app/_layout.tsx \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build APKs
        working-directory: android
        run: ./gradlew assembleRelease

      - name: Prepare APK files
        run: |
          mkdir -p dev-apks
          
          # Copy and rename APKs with branch and build info
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME//\//-}  # Replace / with -
          
          for f in android/app/build/outputs/apk/release/*.apk; do
            base=$(basename "$f")
            if [[ "$base" == *universal*.apk ]]; then
              suffix="universal"
            elif [[ "$base" == *arm64*.apk ]]; then
              suffix="arm64-v8a"
            elif [[ "$base" == *x86_64*.apk ]]; then
              suffix="x86_64"
            elif [[ "$base" == *x86*.apk ]]; then
              suffix="x86"
            else
              suffix="${base%.apk}"
            fi
            cp "$f" "dev-apks/AniSurge-dev-$BRANCH_NAME-${{ github.run_number }}-$suffix.apk"
          done
          
          echo "Built APKs:"
          ls -lh dev-apks/

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dev-apks-${{ github.run_number }}
          path: dev-apks/*.apk
          retention-days: 7

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // List the built APKs
            const apkDir = 'dev-apks';
            const apks = fs.readdirSync(apkDir).filter(f => f.endsWith('.apk'));
            
            let comment = '## ðŸ“± Development Build Complete\n\n';
            comment += 'APK files have been built and uploaded as artifacts:\n\n';
            
            apks.forEach(apk => {
              comment += `- \`${apk}\`\n`;
            });
            
            comment += '\n### Download Instructions:\n';
            comment += '1. Go to the "Actions" tab\n';
            comment += '2. Click on this workflow run\n';
            comment += '3. Download the APK artifacts from the "Artifacts" section\n';
            comment += '4. Install on your Android device\n\n';
            comment += '**Note**: These are development builds and may be unstable.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Cleanup
        run: rm -rf dev-apks/
