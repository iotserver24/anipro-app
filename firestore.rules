rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Allow reading all user documents for username checks
      allow read: if true;
      
      // Allow users to create their own document during registration
      allow create: if request.auth != null 
                   && request.auth.uid == userId;
      
      // Allow users to update their own document
      allow update: if request.auth != null 
                   && request.auth.uid == userId;
    }
    
    match /comments/{commentId} {
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null 
                   && resource.data.userId == request.auth.uid;
      
      // Allow updating likes count
      allow update: if request.auth != null
                   && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']);
    }
    
    match /comment_likes/{likeId} {
      // Allow reading like status
      allow read: if true;
      
      // Allow authenticated users to create and delete their own likes
      allow create, delete: if request.auth != null
                           && likeId.matches(request.auth.uid + '_.*');
    }

    // User data collection (watch history and watchlist)
    match /user_data/{userId} {
      // Allow users to read and write their own data
      allow read, write: if request.auth != null 
                        && request.auth.uid == userId;
      
      // Allow users to update only specific fields
      allow update: if request.auth != null 
                   && request.auth.uid == userId
                   && (
                     request.resource.data.diff(resource.data).affectedKeys().hasOnly(['watchHistory', 'watchlist', 'lastSync'])
                     || request.resource.data.diff(resource.data).affectedKeys().hasOnly(['lastSync'])
                   );
    }
  }
}